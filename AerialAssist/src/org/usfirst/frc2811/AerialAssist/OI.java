// RobotBuilder Version: 1.0
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc2811.AerialAssist;

import edu.wpi.first.wpilibj.*;
import edu.wpi.first.wpilibj.buttons.*;
import org.usfirst.frc2811.AerialAssist.commands.AimToggle;
import org.usfirst.frc2811.AerialAssist.commands.ArmDown;
import org.usfirst.frc2811.AerialAssist.commands.ArmUp;
import org.usfirst.frc2811.AerialAssist.commands.AutoAim;
import org.usfirst.frc2811.AerialAssist.commands.ReLoadA;
import org.usfirst.frc2811.AerialAssist.commands.ReLoadB;
import org.usfirst.frc2811.AerialAssist.commands.ClawToggle;
import org.usfirst.frc2811.AerialAssist.commands.CloseClaw;
import org.usfirst.frc2811.AerialAssist.commands.OpenClaw;

import org.usfirst.frc2811.AerialAssist.commands.ShiftGear;
import org.usfirst.frc2811.AerialAssist.commands.ShootingSequence;
import org.usfirst.frc2811.AerialAssist.commands.TrussGroup;
import org.usfirst.frc2811.AerialAssist.commands.UnLoad;
import org.usfirst.frc2811.AerialAssist.commands.tempshoot;

/**
 * This class is the glue that binds the controls on the physical operator
 * interface to the commands and command groups that allow control of the robot.
 */
public class OI {
    
    public static Joystick joystick1;
    public static JoystickButton truss;
    public JoystickButton shift;
    public JoystickButton spitBall; 
    public JoystickButton suckBall;
    public JoystickButton autoAim;
    //public JoystickButton shoot;
    public JoystickButton aimDown;
    public JoystickButton aimUp;
    //public JoystickButton b9;//not yet used
    public JoystickButton manual;
    public JoystickButton shoot;
    
    public static int FORE_BACK_STICK= 3;//joystick for controlling robot in freedom
    public static final int FORE_BACK_STICK_CONTROLLER = 3;
    public static final int FORE_BACK_STICK_JOYSTICK = 1;
    public static int LEFT_RIGHT_STICK = 2;
    public static boolean FORE_BACK_DIRECTION = false;//reverses direction of the stick
    public static boolean LEFT_RIGHT_DIRECTION = false;
   
    public OI() {
        
       joystick1 = new Joystick(1);
              
       truss = new JoystickButton(joystick1, 1);
       shift = new JoystickButton(joystick1, 2);
       spitBall = new JoystickButton(joystick1, 3);
       suckBall = new JoystickButton(joystick1, 4);
       punt = new JoystickButton(joystick1, 5);
       
       spitBall = new JoystickButton(joystick1, 7);
       suckBall = new JoystickButton(joystick1, 8);
       //b9 = new JoystickButton(joystick1, 9); //not assigned
       manual = new JoystickButton(joystick1, 10); //enable/disable auto-aiming
       //b11 = new JoystickButton(joystick1, 11); //not assigned
        // shoot.whenPressed(null);
       //  punt.whenPressed(new PuntSystem());
        truss.whenPressed(new ClawToggle());
        
        //FIXME Buttons are a mess from the merge, fix this
       shift.whenPressed(new ShiftGear());
       spitBall.whenPressed(new UnLoad());
       //b3.whileHeld(null); 
       //b4.whileHeld(null);
       shoot.whenPressed(new tempshoot());
       autoAim.whileHeld(new AutoAim());
       spitBall.whenPressed(new UnLoad());
       suckBall.whenPressed(new ReLoadA());
       suckBall.whenReleased(new ReLoadB());
      //b9.whenReleased(null);    //not assigned
       manual.whenReleased(new AimToggle());
       //b11.whenReleased(null); //not assigned       
    }
        
    public Joystick getJoystick1() {
        return joystick1;
    }
    
   
      
    public static boolean stickEngaged=true;
    public static boolean armed=true;
    public static boolean shootMotors;
    public static boolean punchActive=false;
    public static boolean autoAimEnable=true;
        
}

